@page  "/Kits/"
@attribute [Authorize (Roles = "admin")]
@inject IRepository Repository
@inject ClientImageService clientImages

<h1>Administer Base Kits</h1>

@if (BaseKits != null && BaseKits.Any())
{

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Line Item Count</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var kit in BaseKits)
            {
                <tr>
                    <td>
                        <a href="/Kits/@kit.Id">
                            <img width="50" alt="" src="@clientImages.ToAbsolutePath(kit.IconUrl)" />  @kit.Name
                        </a>
                    </td>
                    <td>@kit.Items.Count()</td>
                </tr>
            }
        </tbody>

    </table>
    <a class="btn btn-primary" href="/Kits/new">Add New Kit</a>
}
else if (BaseKits == null)
{
    <p>Loading....</p>
}
else
{
    <p>No base kits defined.</p>
    <a class="btn btn-primary" href="/Kits/new">Add New Kit</a>
}

@code {

    public IEnumerable<BaseKit> BaseKits { get; set; }

    protected override async Task OnInitializedAsync()
    {

        try {
            BaseKits = await Repository.GetAllBaseKits();
        } catch (NotImplementedException)
        {
            // do nothing for now...  site is still growing
            BaseKits = Enumerable.Empty<BaseKit>();
        }

    }

}
